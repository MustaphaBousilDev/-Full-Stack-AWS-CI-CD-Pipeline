# Main nginx configuration for React SPA

# Run as non-root user for security
user nginx;

# Automatically detect number of CPU cores and create worker processes
worker_processes auto;

# Error log location and level
error_log /var/log/nginx/error.log notice;

# Process ID file location
pid /var/run/nginx/nginx.pid;

# Events block - controls connection processing
events {
    # Maximum simultaneous connections per worker process
    worker_connections 1024;
    
    # Accept multiple connections at once
    multi_accept on;
    
    # Use efficient connection method on Linux
    use epoll;
}

# HTTP block - main web server configuration
http {
    # Include MIME type definitions
    include /etc/nginx/mime.types;
    
    # Default MIME type for unknown files
    default_type application/octet-stream;

    # Custom log format with timing information
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time';

    # Access log location and format
    access_log /var/log/nginx/access.log main;

    # Efficient file serving
    sendfile on;
    
    # Optimize packet sending
    tcp_nopush on;
    tcp_nodelay on;
    
    # Connection timeout
    keepalive_timeout 65;
    
    # Hash table size for server names
    types_hash_max_size 2048;
    
    # Maximum request body size
    client_max_body_size 16M;
    
    # Hide nginx version in headers
    server_tokens off;

    # Enable gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml
        application/rss+xml
        application/atom+xml
        image/svg+xml;

    # Rate limiting zones
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=static:10m rate=30r/s;

    # Server block - virtual host configuration
    server {
        # Listen on port 80 for IPv4 and IPv6
        listen 80;
        listen [::]:80;
        
        # Server name (localhost for container)
        server_name localhost;
        
        # Document root directory
        root /usr/share/nginx/html;
        
        # Default index file
        index index.html;

        # Security headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
        add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:; connect-src 'self' https:;" always;

        # Health check endpoint for load balancers
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # Static assets with caching and rate limiting
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            # Apply rate limiting
            limit_req zone=static burst=20 nodelay;
            
            # Cache for 1 year
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header X-Content-Type-Options nosniff;
            
            # Try to serve file, return 404 if not found
            try_files $uri =404;
        }

        # API proxy (if backend is in same Docker network)
        location /api/ {
            # Apply rate limiting
            limit_req zone=api burst=10 nodelay;
            
            # Proxy to backend container
            proxy_pass http://backend:8000;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            
            # Timeout settings
            proxy_connect_timeout 5s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }

        # Main SPA routing - handle client-side routing
        location / {
            # Try to serve file, then directory, then fall back to index.html
            try_files $uri $uri/ @fallback;
        }

        # Fallback for React Router
        location @fallback {
            rewrite ^.*$ /index.html last;
        }

        # Security: deny access to hidden files
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }

        # Handle favicon requests
        location = /favicon.ico {
            access_log off;
            log_not_found off;
            expires 1y;
        }

        # Handle robots.txt
        location = /robots.txt {
            access_log off;
            log_not_found off;
        }

        # Error page handling
        error_page 404 /index.html;
        error_page 500 502 503 504 /50x.html;
        
        location = /50x.html {
            root /usr/share/nginx/html;
        }
    }
}